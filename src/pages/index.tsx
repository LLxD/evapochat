import { type NextPage } from "next";
import { useState, useEffect, useRef } from "react";
import Head from "next/head";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const mutation = api.message.createMessage.useMutation();
  const createMessage = (message: string) => {
    mutation.mutate({ text: message });
  };

  const chat = useRef<HTMLDivElement>(null);

  const autoScrollToBottom = () => {
    chat.current?.scrollTo(0, chat.current.scrollHeight);
  };

  const addMessageToChat = (message: string) => {
    createMessage(message);
    setMessage("");
  };

  // add refetchInterval to automatically refetch data
  const { data } = api.message.getAll.useQuery(undefined, {
    refetchInterval: 200,
  });

  const [message, setMessage] = useState("");

  useEffect(() => {
    autoScrollToBottom();
  }, [data]);

  return (
    <>
      <Head>
        <title>evapochat</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-[#111]">
        <div className="grid gap-2 rounded border-2 border-orange-500 p-4 px-12">
          <h1 className="font-mono text-4xl font-bold text-orange-500">
            evapochat
          </h1>
          <div ref={chat} className="h-96 overflow-y-scroll py-4">
            {data?.map((message) => (
              <p key={message.id} className="py-3 text-white">
                {message.text}
              </p>
            ))}
          </div>
          <form
            onSubmit={(e) => {
              e.preventDefault();
              addMessageToChat(message);
            }}
            className="grid gap-2"
          >
            <input
              value={message}
              className="border-2 border-orange-500 bg-transparent p-4 text-white outline-none "
              onChange={(e) => setMessage(e.target.value)}
            ></input>
            <button
              onClick={() => {
                addMessageToChat(message);
              }}
              type="button"
              className="rounded border-2 border-orange-500 p-2 text-orange-500"
            >
              Add a new message!
            </button>
          </form>
        </div>
      </main>
    </>
  );
};

export default Home;
